<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>// Place global declarations here.
chan checkConveyorSensors, checkPadSensors, returnReadings;
urgent chan u;
</declaration><template><name x="5" y="5">Conveyor</name><parameter>int &amp;conveyorReadings[2]</parameter><declaration>// Place local declarations here.
int startSensorStatus;
int endSensorStatus;
int conveyorStatus;</declaration><location id="id0" x="256" y="0"><name x="248" y="16">On</name></location><location id="id1" x="-80" y="-288"><name x="-128" y="-320">CheckSensors</name></location><location id="id2" x="-448" y="0"><name x="-456" y="16">Off</name></location><init ref="id2"/><transition><source ref="id0"/><target ref="id2"/><label kind="guard" x="-160" y="56">endSensorStatus == 1</label><label kind="synchronisation" x="-104" y="72">u!</label><label kind="assignment" x="-152" y="40">conveyorStatus = 0</label><nail x="-88" y="32"/></transition><transition><source ref="id2"/><target ref="id0"/><label kind="guard" x="-232" y="-72">startSensorStatus == 1 &amp;&amp; endSensorStatus == 0</label><label kind="synchronisation" x="-96" y="-88">u!</label><label kind="assignment" x="-152" y="-56">conveyorStatus = 1</label><nail x="-432" y="0"/><nail x="-80" y="-32"/></transition><transition><source ref="id0"/><target ref="id1"/><label kind="synchronisation" x="224" y="-288">checkConveyorSensors!</label><nail x="256" y="-256"/></transition><transition><source ref="id1"/><target ref="id0"/><label kind="guard" x="64" y="-224">conveyorStatus == 1</label><label kind="synchronisation" x="64" y="-208">returnReadings?</label><label kind="assignment" x="64" y="-192">startSensorStatus = conveyorReadings[0], endSensorStatus = conveyorReadings[1]</label></transition><transition><source ref="id1"/><target ref="id2"/><label kind="guard" x="-352" y="-240">conveyorStatus == 0</label><label kind="synchronisation" x="-328" y="-224">returnReadings?</label><label kind="assignment" x="-744" y="-208">startSensorStatus = conveyorReadings[0], endSensorStatus = conveyorReadings[1]</label><nail x="-264" y="-144"/></transition><transition><source ref="id2"/><target ref="id1"/><label kind="synchronisation" x="-600" y="-256">checkConveyorSensors!</label><nail x="-448" y="-240"/></transition></template><template><name>ConveyorSensors</name><parameter>int &amp;conveyorReadings[2]</parameter><declaration>int startSensor = 0;
int endSensor = 0;
</declaration><location id="id3" x="160" y="-32"><name x="120" y="-64">ReturnReadings</name></location><location id="id4" x="0" y="-32"><name x="-40" y="-64">CheckSensor2</name></location><location id="id5" x="-184" y="-32"><name x="-224" y="-64">CheckSensor1</name></location><location id="id6" x="-368" y="-32"><name x="-376" y="-64">Idle</name></location><init ref="id6"/><transition><source ref="id3"/><target ref="id6"/><label kind="synchronisation" x="-144" y="8">returnReadings!</label><label kind="assignment" x="-296" y="40">conveyorReadings[0] = startSensor, conveyorReadings[1] = endSensor</label><nail x="160" y="32"/><nail x="-368" y="32"/></transition><transition><source ref="id4"/><target ref="id3"/><label kind="select" x="56" y="-56">j : int[0,1]</label><label kind="assignment" x="24" y="-32">endSensor = j</label></transition><transition><source ref="id5"/><target ref="id4"/><label kind="select" x="-128" y="-56">i : int[0,1]</label><label kind="assignment" x="-152" y="-32">startSensor = i</label></transition><transition><source ref="id6"/><target ref="id5"/><label kind="synchronisation" x="-352" y="-32">checkConveyorSensors?</label></transition></template><template><name>Aux</name><location id="id7" x="0" y="0"><name x="-16" y="16">Aux</name></location><init ref="id7"/><transition><source ref="id7"/><target ref="id7"/><label kind="synchronisation" x="-8" y="-120">u?</label><nail x="-48" y="-96"/><nail x="40" y="-96"/></transition></template><template><name>OutputRobot</name><declaration>int blockAvailable;
int padFree;</declaration><location id="id8" x="-608" y="-64"><name x="-640" y="-48">MoveBlock</name></location><location id="id9" x="-864" y="-64"><name x="-872" y="-48">Idle</name></location><init ref="id9"/><transition><source ref="id8"/><target ref="id9"/><nail x="-728" y="-40"/></transition><transition><source ref="id9"/><target ref="id8"/><label kind="guard" x="-840" y="-112">blockAvailable == 1 &amp;&amp; padFree == 1</label><nail x="-728" y="-88"/></transition></template><template><name>InputRobot</name><declaration>int blockAvailable;
int conveyorFree;</declaration><location id="id10" x="264" y="0"><name x="232" y="16">MoveBlock</name></location><location id="id11" x="0" y="0"><name x="-8" y="16">Idle</name></location><init ref="id11"/><transition><source ref="id10"/><target ref="id11"/><nail x="136" y="32"/></transition><transition><source ref="id11"/><target ref="id10"/><label kind="guard" x="16" y="-48">blockAvailable == 1 &amp;&amp; conveyorFree == 1</label><nail x="128" y="-24"/></transition></template><template><name>PadSensors</name><parameter>int &amp;padReadings[2]</parameter><declaration>int inputSensor = 0;
int outputSensor = 0;</declaration><location id="id12" x="160" y="-32"><name x="120" y="-64">ReturnReadings</name></location><location id="id13" x="0" y="-32"><name x="-40" y="-64">CheckSensor2</name></location><location id="id14" x="-184" y="-32"><name x="-224" y="-64">CheckSensor1</name></location><location id="id15" x="-368" y="-32"><name x="-376" y="-64">Idle</name></location><init ref="id15"/><transition><source ref="id12"/><target ref="id15"/><label kind="synchronisation" x="-144" y="8">returnReadings!</label><label kind="assignment" x="-264" y="40">padReadings[0] = inputSensor, padReadings[1] = outputSensor</label><nail x="160" y="32"/><nail x="-368" y="32"/></transition><transition><source ref="id13"/><target ref="id12"/><label kind="select" x="56" y="-56">j : int[0,1]</label><label kind="assignment" x="24" y="-32">outputSensor = j</label></transition><transition><source ref="id14"/><target ref="id13"/><label kind="select" x="-128" y="-56">i : int[0,1]</label><label kind="assignment" x="-144" y="-32">inputSensor = i</label></transition><transition><source ref="id15"/><target ref="id14"/><label kind="synchronisation" x="-344" y="-32">checkPadSensors?</label></transition></template><template><name>Controller</name><parameter>int &amp;padReadings[2]</parameter><declaration>int inputSensorStatus;
int outputSensorStatus;
</declaration><location id="id16" x="128" y="0"><name x="88" y="-32">CheckSensors</name></location><location id="id17" x="-192" y="0"><name x="-202" y="-30">Idle</name></location><init ref="id17"/><transition><source ref="id16"/><target ref="id17"/><label kind="synchronisation" x="-96" y="32">returnReadings?</label><nail x="-32" y="24"/></transition><transition><source ref="id17"/><target ref="id16"/><label kind="synchronisation" x="-96" y="-88">checkPadSensors!</label><label kind="assignment" x="-96" y="-64">inputSensorStatus = padReadings[0], outputSensorStatus = padReadings[1]</label><nail x="-32" y="-24"/></transition></template><system>int conveyorReadings[2];
int padReadings[2];

// Place template instantiations here.
aConveyor = Conveyor(conveyorReadings);
aConveyorSensors = ConveyorSensors(conveyorReadings);
aAux = Aux();
aOutputRobot = OutputRobot();
aInputRobot = InputRobot();
aPadSensors = PadSensors(padReadings);

// List one or more processes to be composed into a system.
system aConveyorSensors, aConveyor, aAux, aOutputRobot, aInputRobot, aPadSensors;</system></nta>
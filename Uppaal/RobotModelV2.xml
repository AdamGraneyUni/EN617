<?xml version="1.0" encoding="utf-8"?><!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_1.dtd'><nta><declaration>// Place global declarations here.
chan checkConveyorSensors, checkPadSensors, returnReadings, updateOutputBlockStatus, updateInputBlockStatus, updateEndSensorStatus, updateStartSensorStatus;
urgent chan u;
</declaration><template><name x="5" y="5">Conveyor</name><parameter>int &amp;conveyorReadings[2], int &amp;startSensor, int &amp;endSensor</parameter><declaration>// Place local declarations here.
int startSensorStatus;
int endSensorStatus;
int conveyorStatus;</declaration><location id="id0" x="-96" y="192"><name x="-136" y="208">updateBlocks</name></location><location id="id1" x="256" y="0"><name x="272" y="-8">On</name></location><location id="id2" x="-80" y="-288"><name x="-128" y="-320">CheckSensors</name></location><location id="id3" x="-448" y="0"><name x="-488" y="-8">Off</name></location><init ref="id3"/><transition><source ref="id0"/><target ref="id3"/><label kind="guard" x="-320" y="88">conveyorStatus == 0</label><label kind="synchronisation" x="-208" y="104">updateEndSensorStatus!</label><label kind="assignment" x="-320" y="120">endSensor = endSensorStatus</label></transition><transition><source ref="id0"/><target ref="id1"/><label kind="guard" x="16" y="64">conveyorStatus == 1</label><label kind="synchronisation" x="-48" y="80">updateEndSensorStatus!</label><label kind="assignment" x="-24" y="96">endSensor = endSensorStatus</label></transition><transition><source ref="id1"/><target ref="id0"/><label kind="synchronisation" x="96" y="168">updateStartSensorStatus!</label><label kind="assignment" x="96" y="184">startSensor = startSensorStatus</label><nail x="64" y="192"/></transition><transition><source ref="id3"/><target ref="id0"/><label kind="synchronisation" x="-488" y="168">updateStartSensorStatus!</label><label kind="assignment" x="-488" y="184">startSensor = startSensorStatus</label><nail x="-288" y="192"/></transition><transition><source ref="id1"/><target ref="id3"/><label kind="guard" x="-160" y="48">endSensorStatus == 1</label><label kind="synchronisation" x="-104" y="64">u!</label><label kind="assignment" x="-160" y="32">conveyorStatus = 0</label><nail x="-88" y="32"/></transition><transition><source ref="id3"/><target ref="id1"/><label kind="guard" x="-232" y="-72">startSensorStatus == 1 &amp;&amp; endSensorStatus == 0</label><label kind="synchronisation" x="-96" y="-88">u!</label><label kind="assignment" x="-152" y="-56">conveyorStatus = 1</label><nail x="-432" y="0"/><nail x="-80" y="-32"/></transition><transition><source ref="id1"/><target ref="id2"/><label kind="synchronisation" x="224" y="-288">checkConveyorSensors!</label><nail x="256" y="-256"/></transition><transition><source ref="id2"/><target ref="id1"/><label kind="guard" x="64" y="-224">conveyorStatus == 1</label><label kind="synchronisation" x="64" y="-208">returnReadings?</label><label kind="assignment" x="64" y="-192">startSensorStatus = conveyorReadings[0], endSensorStatus = conveyorReadings[1]</label></transition><transition><source ref="id2"/><target ref="id3"/><label kind="guard" x="-352" y="-240">conveyorStatus == 0</label><label kind="synchronisation" x="-328" y="-224">returnReadings?</label><label kind="assignment" x="-744" y="-208">startSensorStatus = conveyorReadings[0], endSensorStatus = conveyorReadings[1]</label><nail x="-264" y="-144"/></transition><transition><source ref="id3"/><target ref="id2"/><label kind="synchronisation" x="-600" y="-256">checkConveyorSensors!</label><nail x="-448" y="-240"/></transition></template><template><name>ConveyorSensors</name><parameter>int &amp;conveyorReadings[2]</parameter><declaration>int startSensor = 0;
int endSensor = 0;
</declaration><location id="id4" x="160" y="-32"><name x="120" y="-64">ReturnReadings</name></location><location id="id5" x="0" y="-32"><name x="-40" y="-64">CheckSensor2</name></location><location id="id6" x="-184" y="-32"><name x="-224" y="-64">CheckSensor1</name></location><location id="id7" x="-368" y="-32"><name x="-376" y="-64">Idle</name></location><init ref="id7"/><transition><source ref="id4"/><target ref="id7"/><label kind="synchronisation" x="-144" y="8">returnReadings!</label><label kind="assignment" x="-296" y="40">conveyorReadings[0] = startSensor, conveyorReadings[1] = endSensor</label><nail x="160" y="32"/><nail x="-368" y="32"/></transition><transition><source ref="id5"/><target ref="id4"/><label kind="select" x="56" y="-56">j : int[0,1]</label><label kind="assignment" x="24" y="-32">endSensor = j</label></transition><transition><source ref="id6"/><target ref="id5"/><label kind="select" x="-128" y="-56">i : int[0,1]</label><label kind="assignment" x="-152" y="-32">startSensor = i</label></transition><transition><source ref="id7"/><target ref="id6"/><label kind="synchronisation" x="-352" y="-32">checkConveyorSensors?</label></transition></template><template><name>Aux</name><location id="id8" x="0" y="0"><name x="-16" y="16">Aux</name></location><init ref="id8"/><transition><source ref="id8"/><target ref="id8"/><label kind="synchronisation" x="-8" y="-120">u?</label><nail x="-48" y="-96"/><nail x="40" y="-96"/></transition></template><template><name>OutputRobot</name><parameter>int &amp;outputBlock, int &amp;endSensor</parameter><declaration>int blockAvailable;
int padOccupied;</declaration><location id="id9" x="-536" y="-64"><name x="-568" y="-48">MoveBlock</name></location><location id="id10" x="-864" y="-64"><name x="-872" y="-48">Idle</name></location><init ref="id10"/><transition><source ref="id10"/><target ref="id10"/><label kind="synchronisation" x="-1168" y="-80">updateEndSensorStatus?</label><label kind="assignment" x="-1168" y="-64">blockAvailable = endSensor</label><nail x="-992" y="-96"/><nail x="-992" y="0"/></transition><transition><source ref="id10"/><target ref="id10"/><label kind="synchronisation" x="-936" y="-208">updateOutputBlockStatus?</label><label kind="assignment" x="-936" y="-192">padOccupied = outputBlock</label><nail x="-824" y="-168"/><nail x="-912" y="-168"/></transition><transition><source ref="id9"/><target ref="id10"/><nail x="-728" y="-40"/></transition><transition><source ref="id10"/><target ref="id9"/><label kind="guard" x="-800" y="-112">blockAvailable == 1 &amp;&amp; padOccupied == 0</label><nail x="-704" y="-88"/></transition></template><template><name>InputRobot</name><parameter>int &amp;inputBlock, int &amp;startSensor</parameter><declaration>int blockAvailable;
int conveyorOccupied;</declaration><location id="id11" x="352" y="0"><name x="320" y="16">MoveBlock</name></location><location id="id12" x="0" y="0"><name x="-8" y="16">Idle</name></location><init ref="id12"/><transition><source ref="id12"/><target ref="id12"/><label kind="synchronisation" x="-304" y="-8">updateStartSensorStatus?</label><label kind="assignment" x="-304" y="8">conveyorOccupied = startSensor</label><nail x="-24" y="-8"/><nail x="-88" y="-24"/><nail x="-88" y="32"/></transition><transition><source ref="id12"/><target ref="id12"/><label kind="synchronisation" x="-72" y="-128">updateInputBlockStatus?</label><label kind="assignment" x="-72" y="-112">blockAvailable = inputBlock</label><nail x="40" y="-80"/><nail x="-32" y="-80"/></transition><transition><source ref="id11"/><target ref="id12"/><nail x="168" y="32"/></transition><transition><source ref="id12"/><target ref="id11"/><label kind="guard" x="64" y="-48">blockAvailable == 1 &amp;&amp; conveyorOccupied == 0</label><nail x="168" y="-24"/></transition></template><template><name>PadSensors</name><parameter>int &amp;padReadings[2]</parameter><declaration>int inputSensor = 0;
int outputSensor = 0;</declaration><location id="id13" x="160" y="-32"><name x="120" y="-64">ReturnReadings</name></location><location id="id14" x="0" y="-32"><name x="-40" y="-64">CheckSensor2</name></location><location id="id15" x="-184" y="-32"><name x="-224" y="-64">CheckSensor1</name></location><location id="id16" x="-368" y="-32"><name x="-376" y="-64">Idle</name></location><init ref="id16"/><transition><source ref="id13"/><target ref="id16"/><label kind="synchronisation" x="-144" y="8">returnReadings!</label><label kind="assignment" x="-264" y="40">padReadings[0] = inputSensor, padReadings[1] = outputSensor</label><nail x="160" y="32"/><nail x="-368" y="32"/></transition><transition><source ref="id14"/><target ref="id13"/><label kind="select" x="56" y="-56">j : int[0,1]</label><label kind="assignment" x="24" y="-32">outputSensor = j</label></transition><transition><source ref="id15"/><target ref="id14"/><label kind="select" x="-128" y="-56">i : int[0,1]</label><label kind="assignment" x="-144" y="-32">inputSensor = i</label></transition><transition><source ref="id16"/><target ref="id15"/><label kind="synchronisation" x="-344" y="-32">checkPadSensors?</label></transition></template><template><name>Controller</name><parameter>int &amp;padReadings[2], int &amp;inputBlock, int &amp;outputBlock</parameter><declaration>int inputSensorStatus;
int outputSensorStatus;
</declaration><location id="id17" x="-288" y="64"><name x="-400" y="80">updateBlockStatus</name></location><location id="id18" x="-192" y="-224"><name x="-232" y="-256">CheckSensors</name></location><location id="id19" x="-192" y="-64"><name x="-168" y="-72">Idle</name></location><init ref="id19"/><transition><source ref="id17"/><target ref="id19"/><label kind="synchronisation" x="-432" y="-24">updateOutputBlockStatus!</label><label kind="assignment" x="-432" y="0">outputBlock = outputSensorStatus</label></transition><transition><source ref="id19"/><target ref="id17"/><label kind="synchronisation" x="-240" y="64">updateInputBlockStatus!</label><label kind="assignment" x="-240" y="80">inputBlock = inputSensorStatus</label><nail x="-136" y="64"/><nail x="-248" y="64"/></transition><transition><source ref="id18"/><target ref="id19"/><label kind="synchronisation" x="-152" y="-160">returnReadings?</label><label kind="assignment" x="-152" y="-144">inputSensorStatus = padReadings[0], outputSensorStatus = padReadings[1]</label><nail x="-160" y="-144"/></transition><transition><source ref="id19"/><target ref="id18"/><label kind="synchronisation" x="-344" y="-160">checkPadSensors!</label><nail x="-216" y="-152"/></transition></template><system>int conveyorReadings[2];
int padReadings[2];
int inputBlock;
int outputBlock;
int startSensor;
int endSensor;

// Place template instantiations here.
aConveyor = Conveyor(conveyorReadings, startSensor, endSensor);
aConveyorSensors = ConveyorSensors(conveyorReadings);
aAux = Aux();
aOutputRobot = OutputRobot(outputBlock, endSensor);
aInputRobot = InputRobot(inputBlock, startSensor);
aPadSensors = PadSensors(padReadings);
aController = Controller(padReadings, inputBlock, outputBlock);

// List one or more processes to be composed into a system.
system aConveyorSensors, aConveyor, aAux, aOutputRobot, aInputRobot, aPadSensors, aController;</system></nta>